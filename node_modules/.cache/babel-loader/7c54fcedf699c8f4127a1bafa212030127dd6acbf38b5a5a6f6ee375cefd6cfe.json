{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcg\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskHookForm(props) {\n  _s();\n  var _errors$title, _errors$description, _errors$people;\n  let {\n    kisiler,\n    submitFn\n  } = props;\n  console.log(kisiler, submitFn);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors,\n      isValid\n    }\n  } = useForm({\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      people: []\n    }\n  });\n  function handleSubmit1(formState) {\n    submitFn({\n      ...formState,\n      id: nanoid(5),\n      status: \"yapılacak\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(handleSubmit1),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        type: \"text\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: console.log((_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: p,\n            ...register(\"people\", {\n              required: \"Task açıklaması yazmalısınız\",\n              min: (1, \"Lütfen en az bir kişi seçin\"),\n              max: (3, \"En fazla 3 kişi seçebilirsiniz\")\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskHookForm, \"MIUZaUiL7E7/wd/S6ZyTHFJbXEU=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\n;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","useEffect","useForm","nanoid","TaskHookForm","props","kisiler","submitFn","console","log","register","handleSubmit","formState","errors","isValid","defaultValues","title","description","people","handleSubmit1","id","status","required","minLength","value","message","map","p","min","max"],"sources":["C:/Users/mcg/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { nanoid } from \"nanoid\";\r\nexport default function TaskHookForm(props) {\r\n  let {kisiler,submitFn}=props\r\n  console.log(kisiler,submitFn);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isValid },\r\n  } = useForm({\r\n\r\n    defaultValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      people:[]\r\n\r\n    },\r\n  });\r\n  \r\n  \r\n  function handleSubmit1(formState) {\r\n  \r\n    submitFn({\r\n      ...formState,\r\n      id: nanoid(5),\r\n      status: \"yapılacak\",\r\n    });\r\n    \r\n  }\r\n  \r\n  return (\r\n    <form className=\"taskForm\"  onSubmit={handleSubmit(handleSubmit1)}>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          type=\"text\"\r\n          {...register(\"title\", {required: \"Task başlığı yazmalısınız\", minLength: {value:3, message:\"Task başlığı en az 3 karakter olmalı\"}})}\r\n          />\r\n        <p className=\"input-error\">{ console.log(errors.title?.message)}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          {...register(\"description\", {required: \"Task açıklaması yazmalısınız\", minLength: {value:10, message:\"Task açıklaması en az 10 karakter olmalı\"}})}\r\n         \r\n        ></textarea>\r\n        <p className=\"input-error\">{errors.description?.message  }</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={p}\r\n                {...register(\"people\", { required: \"Task açıklaması yazmalısınız\",\r\n                min: (1,\"Lütfen en az bir kişi seçin\"),\r\n                max: (3, \"En fazla 3 kişi seçebilirsiniz\")\r\n              })}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"input-error\">{errors.people?.message}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={!isValid}\r\n        >\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}